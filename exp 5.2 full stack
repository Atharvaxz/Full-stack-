
const express = require('express');
const mongoose = require('mongoose');
const bodyParser = require('body-parser');

const app = express();
app.use(bodyParser.json());

mongoose.connect('mongodb://127.0.0.1:27017/studentDB', {
  useNewUrlParser: true,
  useUnifiedTopology: true
})
.then(() => console.log('✅ Connected to MongoDB'))
.catch(err => console.log('❌ MongoDB connection error:', err));


const studentSchema = new mongoose.Schema({
  name: { type: String, required: true },
  age: { type: Number, required: true },
  course: { type: String, required: true }
});

const Student = mongoose.model('Student', studentSchema);



// ➕ Create a new student
async function createStudent(req, res) {
  try {
    const student = new Student(req.body);
    await student.save();
    res.status(201).json({ message: '✅ Student added successfully', student });
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
}

// 📖 Get all students
async function getAllStudents(req, res) {
  try {
    const students = await Student.find();
    res.json(students);
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
}

// 🔍 Get student by ID
async function getStudentById(req, res) {
  try {
    const student = await Student.findById(req.params.id);
    if (!student) return res.status(404).json({ message: '❌ Student not found' });
    res.json(student);
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
}

// ✏️ Update student by ID
async function updateStudent(req, res) {
  try {
    const student = await Student.findByIdAndUpdate(req.params.id, req.body, { new: true });
    if (!student) return res.status(404).json({ message: '❌ Student not found' });
    res.json({ message: '✅ Student updated successfully', student });
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
}

// 🗑️ Delete student by ID
async function deleteStudent(req, res) {
  try {
    const student = await Student.findByIdAndDelete(req.params.id);
    if (!student) return res.status(404).json({ message: '❌ Student not found' });
    res.json({ message: '✅ Student deleted successfully', student });
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
}
app.post('/students', createStudent);
app.get('/students', getAllStudents);
app.get('/students/:id', getStudentById);
app.put('/students/:id', updateStudent);
app.delete('/students/:id', deleteStudent);

const PORT = 3000;
app.listen(PORT, () => console.log(`🚀 Server running on http://localhost:${PORT}`));
